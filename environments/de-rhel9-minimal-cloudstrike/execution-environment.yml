---
version: 3

build_arg_defaults:
  ANSIBLE_GALAXY_CLI_COLLECTION_OPTS: '--pre'

images:
  base_image:
    name: 'registry.redhat.io/ansible-automation-platform-25/de-minimal-rhel9:latest'
    options:
      pull_policy: missing
      tls_verify: false

additional_build_files:
  - src: ./ansible.cfg
    dest: /etc/ansible/ansible.cfg

dependencies:
  ansible_core:
    package_pip: ansible-core==2.14.2
  ansible_runner:
    package_pip: ansible-runner==2.3.4
  python:
    - typing-extensions>=4.7.1
    - aiohttp>=3.8.5
  galaxy:
    collections:
      - name: ansible.eda
        source: https://galaxy.ansible.com
      - name: cloud.datadog
        version: '>=1.0.0'
      - name: cloud.prometheus
        version: '>=1.0.0'
      - name: ansible.utils
        version: '>=2.0.0'
      - name: dynatrace.event_driven_ansible
        source: https://galaxy.ansible.com
      - name: crowdstrike.falcon
        source: https://galaxy.ansible.com
      - name: kubealex.eda
        source: https://galaxy.ansible.com
      - name: community.general
        version: ">=7.0.0"
    system:
      - python3.9-devel [platform:rpm]
      - gcc [platform:rpm]
      - make [platform:rpm]
      - pkgconf-pkg-config [platform:rpm]
      - systemd-devel [platform:rpm]
      - python3.9-devel [platform:rpm]
      - python3.9-pip [platform:rpm]
      - python3 [platform:rpm]
      - python [platform:rpm]
      - python3.9 [platform:rpm]
      - python3.9-libs [platform:rpm]
      - python3.9-setuptools [platform:rpm]
      - python3.9-wheel [platform:rpm]
      - python3.9-pip [platform:rpm]
      - python3.9-pip-wheel [platform:rpm] 

options:
  package_manager_path: /usr/bin/microdnf

additional_build_steps:
  prepend_base: |
    USER root
    RUN microdnf update -y && \
        microdnf install -y \
            python3.9-pip \
            python3.9-devel \
            python3.9-setuptools \
            python3.9-wheel \
            gcc \
            gcc-c++ \
            make \
            libffi-devel \
            openssl-devel \
            pkgconf-pkg-config \
        pip install --no-cache-dir --upgrade pip setuptools wheel

  append_final: |
    USER root
    RUN microdnf clean all && \
        rm -rf /var/cache/{dnf,yum} && \
        rm -rf /var/lib/dnf/history.* && \
        rm -rf /var/log/dnf.* && \
        rm -rf /var/cache/dnf && \
        rm -rf /root/.cache && \
        useradd -m admin && \
        echo "admin ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
        mkdir -p /home/admin/.ansible && \
        chown -R admin:admin /home/admin

    WORKDIR /home/admin
    USER admin
    ENV HOME=/home/admin
    ENV ANSIBLE_CONFIG=/etc/ansible/ansible.cfg