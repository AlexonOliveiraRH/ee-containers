---
version: 3

images:
  base_image:
    name: registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel8:latest

additional_build_files:
  - src: ./ansible.cfg
    dest: configs

dependencies:
  ansible_core:
    package_pip: ansible-core>=2.13.10
  ansible_runner:
    package_pip: ansible-runner
  galaxy:
    collections:
      - { name: cloud.terraform }  
  python: requirements.txt
  system: bindep.txt

additional_build_steps:
  prepend_base: |
    USER root
    # Fix DNF missing
    RUN if [ ! -f /usr/bin/dnf ] && [ -f /usr/bin/microdnf ]; then microdnf install -y dnf; fi
    
  prepend_final: |
    USER root
    # Use microdnf for initial updates on minimal containers
    RUN if [ -f /usr/bin/microdnf ] && [ ! -f /usr/bin/dnf ]; then \
          microdnf upgrade -y && \
          microdnf install -y python39-pip python39-devel gcc; \
        elif [ -f /usr/bin/dnf ]; then \
          dnf upgrade -y && \
          dnf install -y python39-pip python39-devel gcc; \
        fi
    
    # Install Python packages
    RUN python3 -m pip install --no-cache-dir terraform-inventory

  append_final: |
    # Final cleanup
    RUN if [ -f /usr/bin/microdnf ]; then \
          microdnf clean all; \
        elif [ -f /usr/bin/dnf ]; then \
          dnf clean all; \
        fi
    ARG ANSIBLE_GALAXY_CLI_ROLE_OPTS=" --ignore-errors"
    RUN microdnf clean all \
      && rm -rf /var/cache/{dnf,yum} \
      && rm -rf /var/lib/dnf/history.* \
      && rm -rf /var/log/dnf.* /var/log/hawkey.log \
      && rm -rf /var/cache/dnf \
      && rm -rf /root/.cache \
      && rm -rf /etc/ansible/ansible.cfg
