---
version: 3

images:
  base_image:
    name: registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel8:latest

additional_build_files:
  - src: ./ansible.cfg
    dest: configs

dependencies:
  ansible_core:
    package_pip: ansible-core>=2.13.10
  ansible_runner:
    package_pip: ansible-runner
  galaxy:
    collections:
      - { name: cloud.terraform }  
  python: requirements.txt
  system: bindep.txt

additional_build_steps:
  prepend_base: |
    USER root
    RUN if [ ! -f /usr/bin/dnf ] && [ -f /usr/bin/microdnf ]; then microdnf install -y dnf; fi
    
  prepend_final: |
    USER root
    RUN if [ -f /usr/bin/microdnf ] && [ ! -f /usr/bin/dnf ]; then \
          microdnf upgrade -y && \
          microdnf install -y python39-pip python39-devel gcc curl unzip; \
        elif [ -f /usr/bin/dnf ]; then \
          dnf upgrade -y && \
          dnf install -y python39-pip python39-devel gcc curl unzip; \
        fi
    
    RUN python3 -m pip install --user --ignore-installed --no-cache-dir --upgrade pip setuptools wheel
    
    RUN TERRAFORM_INV_VERSION="0.10" && \
        mkdir -p /usr/local/bin && \
        curl -L "https://github.com/adammck/terraform-inventory/archive/refs/heads/master.zip" -o /tmp/terraform-inventory.zip && \
        unzip /tmp/terraform-inventory.zip -d /tmp && \
        mv /tmp/terraform-inventory /usr/local/bin/terraform-inventory && \
        chmod +x /usr/local/bin/terraform-inventory && \
        rm -f /tmp/terraform-inventory.zip

  append_final: |
    RUN if [ -f /usr/bin/microdnf ]; then \
          microdnf clean all; \
        elif [ -f /usr/bin/dnf ]; then \
          dnf clean all; \
        fi
    ARG ANSIBLE_GALAXY_CLI_ROLE_OPTS=" --ignore-errors"
    RUN microdnf clean all \
      && rm -rf /var/cache/{dnf,yum} \
      && rm -rf /var/lib/dnf/history.* \
      && rm -rf /var/log/dnf.* /var/log/hawkey.log \
      && rm -rf /var/cache/dnf \
      && rm -rf /root/.cache \
      && rm -rf /etc/ansible/ansible.cfg
