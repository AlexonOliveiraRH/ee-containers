---
- name: Set build variables
  ansible.builtin.set_fact:
    current_env: "{{ env_name }}"
    current_path: "{{ env_path }}"
    build_dirs:
      - "{{ work_dir }}/_build"
      - "{{ work_dir }}/0_build"
      - "{{ work_dir }}/context"

- name: Display build info
  ansible.builtin.debug:
    msg: "Building environment: {{ current_env }} from {{ current_path }}"

- name: Build process
  block:
    - name: Create build directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop: "{{ build_dirs }}"
      loop_control:
        label: "Creating directory: {{ item }}"

    - name: Check if image already exists
      ansible.builtin.command:
        cmd: "podman images -q {{ current_env }}"
      register: image_exists
      changed_when: false

    - name: Build EE container image
      ansible.builtin.command:
        cmd: >
          ansible-builder build
          --tag {{ current_env }}
          --container-runtime podman
          --verbosity 2
          --prune-images
          --context {{ work_dir }}/context
          when: image_exists.stdout == "" and not ansible.builtin.stat.path.exists and ansible.builtin.stat.path != "{{ work_dir }}/context"
          -f {{ current_path }}/execution-environment.yml
        when: image_exists.stdout == "" and ansible.builtin.stat.path != "{{ work_dir }}/context"
      register: build_result
      when: image_exists.stdout == "" and ansible.builtin.stat.path != "{{ work_dir }}/context"

  rescue:
    - name: Clean up on build failure
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: "{{ build_dirs }}"
      loop_control:
        label: "Cleaning up: {{ item }}"

    - name: Fail with build error
      ansible.builtin.fail:
        msg: "Container build failed for {{ current_env }}. See output above."

  always:
    - name: Display build status
      ansible.builtin.debug:
        msg: |
          Build Status for {{ current_env }}: {{ 'Failed' if build_result.failed | default(false) else 'Success' }}
          
          STDOUT:
          {{ build_result.stdout_lines | default([]) | to_nice_yaml }}
          
          STDERR:
          {{ build_result.stderr_lines | default([]) | to_nice_yaml }}

- name: Display build error
  ansible.builtin.debug:
    msg: |
      Build failed with the following output:
      STDOUT:
      {{ build_result.stdout_lines | default([]) | to_nice_yaml }}
      STDERR:
      {{ build_result.stderr_lines | default([]) | to_nice_yaml }}
  when: build_result is failed
