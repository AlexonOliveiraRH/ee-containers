---
- name: Build Execution Environment
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    context_dir: "{{ work_dir }}/context"
    execution_env_file: "{{ current_path }}/execution-environment.yml"
    policy_file: "{{ context_dir }}/policy.json"

  tasks:
    - name: Set build variables
      ansible.builtin.set_fact:
        current_env: "{{ env_name }}"
        current_path: "{{ env_path }}"
        image_name: "{{ current_env }}"  # Define image name for consistency

    - name: Check if image exists using podman inspect
      ansible.builtin.shell: podman inspect "{{ image_name }}"
      register: image_info
      failed_when: false  # Do not fail if the image does not exist
      changed_when: false  # This task does not change the system

    - name: Determine if image exists
      ansible.builtin.set_fact:
        image_exists: "{{ image_info.rc == 0 }}"

    - name: Build environment if image does not exist
      when: not image_exists
      block:
        - name: Ensure context directory exists
          ansible.builtin.file:
            path: "{{ context_dir }}"
            state: directory
            mode: '0755'

        - name: Copy execution environment file
          ansible.builtin.copy:
            src: "{{ execution_env_file }}"
            dest: "{{ context_dir }}/execution-environment.yml"
            mode: '0644'

        - name: Copy bindep.txt file
          ansible.builtin.copy:
            src: "{{ current_path }}/bindep.txt"
            dest: "{{ context_dir }}/bindep.txt"
            mode: '0644'
          when: ansible.builtin.stat(path="{{ current_path }}/bindep.txt").stat.exists

        - name: Copy requirements.yml file
          ansible.builtin.copy:
            src: "{{ current_path }}/requirements.yml"
            dest: "{{ context_dir }}/requirements.yml"
            mode: '0644'
          when: ansible.builtin.stat(path="{{ current_path }}/requirements.yml").stat.exists

        - name: Copy requirements.txt file
          ansible.builtin.copy:
            src: "{{ current_path }}/requirements.txt"
            dest: "{{ context_dir }}/requirements.txt"
            mode: '0644'
          when: ansible.builtin.stat(path="{{ current_path }}/requirements.txt").stat.exists

        - name: Build container image using ansible-builder
          ansible.builtin.command:
            cmd: >-
              ansible-builder build
              --tag {{ image_name }}
              --container-runtime podman
              --verbosity 2
              --prune-images
              --context {{ context_dir }}
              -f {{ context_dir }}/execution-environment.yml
            chdir: "{{ context_dir }}"  # Run command from context directory
          register: build_output
          changed_when: "'Downloaded newer image' in build_output.stdout or 'Successfully built' in build_output.stdout"
          environment:
            ANSIBLE_BUILDER_HOME: "{{ context_dir }}"

      rescue:
        - name: Display build error
          ansible.builtin.debug:
            msg: |
              Build failed for {{ current_env }}:
              STDOUT:
              {{ build_output.stdout_lines | default([]) | to_nice_yaml }}
              STDERR:
              {{ build_output.stderr_lines | default([]) | to_nice_yaml }}

        - name: Fail the build
          ansible.builtin.fail:
            msg: "Build failed for {{ current_env }}. See output above."

      always:
        - name: Display build status
          ansible.builtin.debug:
            msg: "Build Status for {{ current_env }}: {{ 'Failed' if build_output.failed | default(false) else 'Success' }}"

    - name: Create container policy file
      ansible.builtin.template:
        src: templates/container_policy.json.j2
        dest: "{{ policy_file }}"
        mode: '0644'
