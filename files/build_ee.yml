---
- name: Set build variables
  ansible.builtin.set_fact:
    current_env: "{{ env_name }}"
    current_path: "{{ env_path }}"

- name: Display build info
  ansible.builtin.debug:
    msg: "Building environment: {{ current_env }} from {{ current_path }}"

- name: Build process
  block:
    - name: Check if image exists
      ansible.builtin.command:
        cmd: "podman images -q {{ current_env }}"
      register: image_exists
      changed_when: false

    - name: Build EE container image
      ansible.builtin.command:
        cmd: >-
          ansible-builder build
          --tag {{ current_env }}
          --container-runtime podman
          --verbosity 2
          --prune-images
          --context {{ work_dir }}/context
          -f {{ current_path }}/execution-environment.yml
      register: build_result
      when: image_exists.stdout == ""
      changed_when: "'Downloaded newer image' in build_result.stdout or 'Successfully built' in build_result.stdout"

  rescue:
    - name: Display build error
      ansible.builtin.debug:
        msg: |
          Build failed for {{ current_env }} with the following output:
          STDOUT:
          {{ build_result.stdout_lines | default([]) | to_nice_yaml }}
          STDERR:
          {{ build_result.stderr_lines | default([]) | to_nice_yaml }}

    - name: Fail the build
      ansible.builtin.fail:
        msg: "Container build failed for {{ current_env }}. See output above."

  always:
    - name: Display build status
      ansible.builtin.debug:
        msg: |
          Build Status for {{ current_env }}: {{ 'Failed' if build_result.failed | default(false) else 'Success' }}
          
          STDOUT:
          {{ build_result.stdout_lines | default([]) | to_nice_yaml }}
          
          STDERR:
          {{ build_result.stderr_lines | default([]) | to_nice_yaml }}
