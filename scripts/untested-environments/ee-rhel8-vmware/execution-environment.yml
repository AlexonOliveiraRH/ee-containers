---
version: 3
# Note regarding the latest tag on images https://access.redhat.com/articles/4301321
images:
    base_image:
      name: registry.redhat.io/ansible-automation-platform/ee-minimal-rhel8:2.18.2-1
additional_build_files:
    # Can be used to resolve collections from private automation hub
    - src: ./ansible.cfg
      dest: configs

dependencies:
    galaxy: requirements.yml
    python: requirements.txt
    system: bindep.txt

options:
    package_manager_path: /usr/bin/microdnf

additional_build_steps:
    prepend_base:
        - ARG PYCMD=python3.11
        - RUN microdnf install -y shadow-utils util-linux-user
        - RUN microdnf install -y python3.11-pytz python3.11-pyyaml python3.11-requests openshift-clients --enablerepo=rhocp-4.17-for-rhel-8-x86_64-rpms --enablerepo=ansible-automation-platform-2.5-for-rhel-8-x86_64-rpms
        - RUN useradd -m -s /bin/bash admin
        - RUN echo 'admin:your_password' | chpasswd
        - RUN usermod -aG wheel admin
        - RUN mkdir -p /etc/sudoers.d
        - RUN echo 'admin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/admin
        - RUN $PYCMD -m pip install --no-cache-dir --upgrade --user pip setuptools openshift kubernetes
        - RUN $PYCMD -m pip install --no-cache-dir --upgrade --user --ignore-installed typing-extensions
        - RUN $PYCMD -m pip install --no-cache-dir --user --ignore-installed aiohttp
    prepend_galaxy:
        # Add custom ansible.cfg which defines collection install sources
        - ADD _build/configs/ansible.cfg /etc/ansible/ansible.cfg
        # AH_TOKEN is passed into the build command using a --build-arg
        # accept this as an ARG during this stage to reference later
        - ARG AH_TOKEN
        # Use the above ARG to define an environment variable holding
        # the token for resolving private collections
        - ENV ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN=$AH_TOKEN
    append_final:
        - RUN microdnf clean all
        - RUN $PYCMD -m pip cache purge
        - RUN rm -rf /var/cache/*
        - RUN rm -rf /etc/ansible/ansible.cfg
        - RUN rm -rf /usr/share/doc /usr/share/man /usr/share/locale /tmp/*
        - ENV PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.11/site-packages:/usr/local/lib64/python3.11/site-packages

# BEGIN ANSIBLE MANAGED BLOCK
[ubi-9-appstream-rpms]
name=Red Hat Universal Base Image 9 BaseOS
baseurl=https://cdn.redhat.com/content/dist/ubi/ubi9/appstream/x86_64/
enabled=1
gpgcheck=1
gpgkey=https://access.redhat.com/security/pki/keys/redhat/redhat-ubi-9-key.pub
# END ANSIBLE MANAGED BLOCK
