---
# Credential management tasks

# Get the home directory path explicitly
- name: Get user home directory
  ansible.builtin.set_fact:
    user_home: "{{ lookup('env', 'HOME') }}"

# Ensure ansible vars directory exists
- name: Ensure ansible vars directory exists
  ansible.builtin.file:
    path: "{{ user_home }}/.ansible/vars"
    state: directory
    mode: '0700'

# Load existing credentials if present
- name: Check if credentials file exists
  ansible.builtin.stat:
    path: "{{ user_home }}/.ansible/vars/config"
  register: config_file

- name: Load existing credentials
  ansible.builtin.include_vars:
    file: "{{ user_home }}/.ansible/vars/config"
  when: config_file.stat.exists
  no_log: true

# Red Hat login credentials
- name: Prompt for Red Hat username
  ansible.builtin.pause:
    prompt: "Enter your Red Hat username"
  register: input_username
  when: rh_username is not defined or rh_username == ""
  no_log: true

- name: Set Red Hat username
  ansible.builtin.set_fact:
    rh_username: "{{ input_username.user_input }}"
  when: input_username is defined and input_username.user_input is defined
  no_log: true

- name: Prompt for Red Hat password
  ansible.builtin.pause:
    prompt: "Enter your Red Hat password"
    echo: false
  register: input_password
  when: rh_password is not defined or rh_password == ""
  no_log: true

- name: Set Red Hat password
  ansible.builtin.set_fact:
    rh_password: "{{ input_password.user_input }}"
  when: input_password is defined and input_password.user_input is defined
  no_log: true

- name: Prompt for Red Hat email
  ansible.builtin.pause:
    prompt: "Enter your Red Hat email address"
  register: input_email
  when: rh_email is not defined or rh_email == ""
  no_log: true

- name: Set Red Hat email
  ansible.builtin.set_fact:
    rh_email: "{{ input_email.user_input }}"
  when: input_email is defined and input_email.user_input is defined
  no_log: true

# Automation Hub token
- name: Prompt for Automation Hub token
  ansible.builtin.pause:
    prompt: "Enter your Automation Hub token (for console.redhat.com)"
    echo: false
  register: input_hub_token
  when: automation_hub_token is not defined or automation_hub_token == ""
  no_log: true

- name: Set Automation Hub token
  ansible.builtin.set_fact:
    automation_hub_token: "{{ input_hub_token.user_input }}"
  when: input_hub_token is defined and input_hub_token.user_input is defined
  no_log: true

# Galaxy token
- name: Prompt for Galaxy token
  ansible.builtin.pause:
    prompt: "Enter your Ansible Galaxy token (for galaxy.ansible.com)"
    echo: false
  register: input_galaxy_token
  when: galaxy_token is not defined or galaxy_token == ""
  no_log: true

- name: Set Galaxy token
  ansible.builtin.set_fact:
    galaxy_token: "{{ input_galaxy_token.user_input }}"
  when: input_galaxy_token is defined and input_galaxy_token.user_input is defined
  no_log: true

# Save credentials with improved error handling
- name: Save credentials to config file
  ansible.builtin.copy:
    content: |
      ---
      rh_username: "{{ rh_username }}"
      rh_password: "{{ rh_password }}"
      rh_email: "{{ rh_email }}"
      automation_hub_token: "{{ automation_hub_token }}"
      galaxy_token: "{{ galaxy_token }}"
    dest: "{{ user_home }}/.ansible/vars/config"
    mode: '0600'
  register: credentials_save
  failed_when: false
  no_log: true

- name: Check if credentials were saved successfully
  ansible.builtin.fail:
    msg: "Failed to save credentials. Please check directory permissions for {{ user_home }}/.ansible/vars/"
  when: credentials_save is defined and credentials_save.failed is defined and credentials_save.failed
