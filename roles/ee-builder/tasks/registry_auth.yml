---
# 1. DIRECTORY SETUP
- name: Ensure required directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "{{ '0755' if 'ansible' in item else '0700' }}"
  loop:
    - "{{ ansible_env.HOME }}/.ansible/vars"
    - "{{ ansible_env.HOME }}/.docker"
    - "/etc/containers"
  become: "{{ '/etc/' in item }}"

# 2. CREDENTIAL MANAGEMENT
- name: Check if config file exists
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.ansible/vars/config"
  register: config_file_stat

- name: Create example config file if it doesn't exist
  ansible.builtin.copy:
    dest: "{{ ansible_env.HOME }}/.ansible/vars/config"
    content: |
      ---
      # Red Hat Registry credentials
      # Replace these with your actual credentials
      rh_username: "your-username" 
      rh_password: "your-password"
    mode: "0644"  # More permissive to allow other users to read/write
    force: false  # Don't overwrite if it exists
  when: not config_file_stat.stat.exists

- name: Ensure config file has proper permissions
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.ansible/vars/config"
    mode: "0644"  # readable/writable by owner, readable by group/others
  when: config_file_stat.stat.exists

- name: Load Red Hat credentials from config file
  ansible.builtin.include_vars:
    file: "{{ ansible_env.HOME }}/.ansible/vars/config"
    name: config_vars
  ignore_errors: true
  
- name: Set credentials from config file if available
  ansible.builtin.set_fact:
    rh_username: "{{ config_vars.rh_username | default(rh_username) | default('') }}"
    rh_password: "{{ config_vars.rh_password | default(rh_password) | default('') }}"
  no_log: true
  ignore_errors: true

# 3. REGISTRY CONFIGURATION
- name: Fix registries.conf format with all Red Hat registries
  ansible.builtin.copy:
    dest: "/etc/containers/registries.conf"
    mode: "0644"
    content: |
      # This is a system-wide configuration file for container registries.
      # For more information on registries configuration, see containers-registries.conf(5).
      
      # Registries to search for images that are not fully-qualified.
      unqualified-search-registries = ["registry.access.redhat.com"]
      
      # Container registry credentials configuration - Red Hat registries
      [[registry]]
      prefix = "registry.redhat.io"
      location = "registry.redhat.io"
      insecure = false
      
      [[registry]]
      prefix = "registry.access.redhat.com"
      location = "registry.access.redhat.com"
      insecure = false
      
      [[registry]]
      prefix = "registry.connect.redhat.com"
      location = "registry.connect.redhat.com"
      insecure = false
    backup: true
  become: true

# 4. AUTHENTICATION FILES
- name: Create registry authentication configuration (multiple locations)
  ansible.builtin.copy:
    dest: "{{ item.path }}"
    content: |
      {
        "auths": {
          "registry.redhat.io": {
            "auth": "{{ (rh_username ~ ':' ~ rh_password) | b64encode }}"
          },
          "registry.access.redhat.com": {
            "auth": "{{ (rh_username ~ ':' ~ rh_password) | b64encode }}"
          },
          "registry.connect.redhat.com": {
            "auth": "{{ (rh_username ~ ':' ~ rh_password) | b64encode }}"
          }
        }
      }
    mode: "0600"
    force: true
  loop:
    - { path: "{{ ansible_env.HOME }}/.docker/config.json", become: false }
    - { path: "/etc/containers/auth.json", become: true }
  become: "{{ item.become }}"
  no_log: true
  when: rh_username != '' and rh_password != ''

# 5. AUTHENTICATION TESTING
- name: Test registry authentication with verbose error handling
  ansible.builtin.shell: |
    # First try with system auth
    echo "Trying system-level authentication..."
    podman pull registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel9:latest && exit 0

    # If that fails, try explicit login
    echo "Trying explicit login..."
    podman logout registry.redhat.io || true
    podman login registry.redhat.io --username {{ rh_username }} --password {{ rh_password }} || {
      echo "Login failed. Check your Red Hat credentials."
      exit 1
    }

    # Try pulling again after login
    echo "Trying pull after login..."
    podman pull registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel9:latest || {
      echo "Pull failed after successful login. This may be a network or image path issue."
      exit 1
    }
    
    echo "Authentication successful!"
    exit 0
  register: registry_test
  changed_when: false
  ignore_errors: true
  no_log: true
  when: rh_username != '' and rh_password != ''

# 6. RESULT DISPLAY
- name: Display registry authentication status
  ansible.builtin.debug:
    msg: "{{ 'Registry authentication successful!' if registry_test.rc == 0 else 'Registry authentication failed. Builds may not succeed.' }}"
  when: registry_test is defined
