---
- name: Remove temporary files and directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/ansible_safe"
    # Add other temp paths as needed
  ignore_errors: true

# Only cleanup selective subdirectories and files
- name: Clean up work directory selectively
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/ansible_safe"
    - "/tmp/ee-containers/hooks"
    - "/tmp/ee-containers/custom-assemble.sh"
    - "/tmp/ee-containers"
  ignore_errors: true

# Clean up build context directories
- name: Remove build context directories
  ansible.builtin.file:
    path: "/tmp/ee-containers/environments/{{ item }}/context"
    state: absent
  with_items: "{{ environments_to_build }}"
  ignore_errors: true
  tags:
    - cleanup
    - context

# Clean dangling images (images with <none> tag)
- name: Remove dangling images
  ansible.builtin.command:
    cmd: podman image prune -f
  ignore_errors: true
  tags:
    - cleanup
    - images

# Clean up temporary log files
- name: Find and remove temporary build logs
  ansible.builtin.find:
    paths: "/tmp/ee-containers/environments"
    patterns: "build-*.log"
    recurse: yes
  register: temp_logs
  tags:
    - cleanup
    - logs

- name: Delete temporary build logs
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ temp_logs.files }}"
  ignore_errors: true
  tags:
    - cleanup
    - logs

# Clean up generated Containerfiles if no longer needed
- name: Find generated Containerfiles
  ansible.builtin.find:
    paths: "/tmp/ee-containers/environments"
    patterns: "Containerfile"
    recurse: yes
  register: containerfiles
  tags:
    - cleanup
    - containerfiles

- name: Remove generated Containerfiles
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ containerfiles.files }}"
  ignore_errors: true
  tags:
    - cleanup
    - containerfiles

# Clean up Python cache directories
- name: Find Python cache directories
  ansible.builtin.find:
    paths: "/tmp/ee-containers"
    patterns: "__pycache__"
    file_type: directory
    recurse: yes
  register: py_cache
  tags:
    - cleanup
    - python

- name: Remove Python cache directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ py_cache.files }}"
  ignore_errors: true
  tags:
    - cleanup
    - python
