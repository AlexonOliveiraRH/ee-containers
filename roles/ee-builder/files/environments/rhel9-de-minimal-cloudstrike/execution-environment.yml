---
version: 3

build_arg_defaults:
  ANSIBLE_GALAXY_CLI_COLLECTION_OPTS: '--pre --ignore-errors --force'
  ANSIBLE_GALAXY_CLI_ROLE_OPTS: '--ignore-errors --force'
  PKGMGR_PRESERVE_CACHE: 'false'

images:
  base_image:
    name: 'registry.redhat.io/ansible-automation-platform-25/ee-supported-rhel9:latest'
    options:
      pull_policy: missing
      tls_verify: false

options:
  package_manager_path: /usr/bin/microdnf

additional_build_files:
  - src: /tmp/ee-containers/_build/configs/ansible.cfg
    dest: configs/ansible.cfg

dependencies:
  ansible_core:
    package_pip: ansible-core
  ansible_runner:
    package_pip: ansible-runner
  galaxy: requirements.yml
  python: requirements.txt
  system: bindep.txt

additional_build_steps:
  prepend_base: |
    USER root
    RUN microdnf install -y gcc make pkg-config python3-devel python3-pip systemd-devel libxml2-devel openssl-devel rpm-build krb5-devel krb5-libs krb5-workstation && \
        python3 -m pip install --user --ignore-installed --no-cache-dir --upgrade pip setuptools wheel && \
        python3 -m pip install --user --ignore-installed --no-cache-dir --upgrade ansible-core ansible-runner

  # This section runs after galaxy collections are installed
  prepend_final: |
    USER root
    RUN microdnf upgrade -y 

  append_final: |
    USER root
    RUN pip3 check || echo "Some packages have issues, but continuing the build"
    RUN microdnf clean all && \
        rm -rf /var/cache/{dnf,yum} && \
        echo "Build completed successfully"
