#!/bin/bash

# Function to log messages with timestamps
log_msg() {
  echo "[$(date '+%H:%M:%S')] $1"
}

# Check prerequisites
for cmd in tmux podman top free; do
  if ! command -v $cmd &> /dev/null; then
    log_msg "‚ö†Ô∏è Required command '$cmd' not found. Some features may not work."
  fi
done

# Safely kill existing session if it exists
if tmux has-session -t podman_monitor 2>/dev/null; then
  log_msg "Cleaning up existing monitor session"
  tmux kill-session -t podman_monitor
fi

# Create session with error handling
log_msg "Starting monitoring session"
tmux new-session -d -s podman_monitor || { 
  echo "‚ùå Failed to create tmux session. Is tmux installed?"; 
  exit 1; 
}

# Display header at the beginning
tmux send-keys -t podman_monitor "clear; cat /tmp/ee-containers/tmux_header.txt; echo; echo 'Initializing monitoring...'; sleep 2" Enter

# Set up attractive appearance
tmux rename-window -t podman_monitor "üöÄ EE Builder"
tmux set -g status-style "bg=#0066cc,fg=white"
tmux set -g pane-border-style "fg=cyan"
tmux set -g pane-active-border-style "fg=#00cc00,bold"
tmux set -g status-left "#[fg=white,bold]EE Builder#[default]"
tmux set -g status-right "#[fg=yellow]%H:%M:%S#[default]"

# Split into 3 panes with a more attractive layout
tmux split-window -v -p 70 -t podman_monitor
tmux split-window -h -p 50 -t podman_monitor

# Setup improved image display with column formatting
tmux select-pane -t podman_monitor:0.1
tmux send-keys -t podman_monitor:0.1 "watch -n 2 'echo -e \"\\e[1;36müì¶ CONTAINER IMAGES\\e[0m\"; printf \"\\n\"; podman images --format \"table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}\" | grep -v \"<none>\" || echo \"No images found\"'" Enter

# Setup enhanced system monitor with colors
tmux select-pane -t podman_monitor:0.2
tmux send-keys -t podman_monitor:0.2 "while true; do clear; echo -e \"\\e[1;33m‚öôÔ∏è SYSTEM MONITOR\\e[0m\"; echo; echo -e \"\\e[1m CPU:\\e[0m\"; top -bn1 | head -3 | grep '%Cpu'; echo; echo -e \"\\e[1m MEMORY:\\e[0m\"; free -h | head -2; echo; echo -e \"\\e[1m DISK:\\e[0m\"; df -h / | grep -v Filesystem; echo; echo -e \"\\e[1m TIME:\\e[0m $(date '+%H:%M:%S')\"; sleep 3; done" Enter

# Status display with improved formatting - now reads from header file first
tmux select-pane -t podman_monitor:0.0
tmux send-keys -t podman_monitor:0.0 "while true; do clear; cat /tmp/ee-containers/tmux_header.txt; echo; echo -e \"\\e[1;32müîç BUILD STATUS\\e[0m\"; echo; if [ -f /tmp/ee-containers/build_status.txt ]; then cat /tmp/ee-containers/build_status.txt | grep -E --color=always 'SUCCESS|FAILED|$'; else echo -e \"\\e[1;33mWaiting for build to start...\\e[0m\"; fi; echo; echo -e \"\\e[90mRefreshing every 2 seconds. Press Ctrl+C to exit.\\e[0m\"; sleep 2; done" Enter

# Return to first pane
tmux select-pane -t podman_monitor:0.0

# Check attach parameter
if [ "$1" == "attach" ]; then
  exec tmux attach-session -t podman_monitor
else
  log_msg "Monitor started in detached mode (connect with 'tmux attach -t podman_monitor')"
fi