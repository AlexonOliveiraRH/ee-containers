---
- name: Set default container registries if not defined
  ansible.builtin.set_fact:
    container_registries: "{{ container_registries | default(['registry.redhat.io']) }}"

- name: Debug registry list
  ansible.builtin.debug:
    msg: "Attempting to authenticate to registries: {{ container_registries | join(', ') }}"

- name: Check if credentials are provided
  ansible.builtin.assert:
    that:
      - rh_username is defined and rh_username != ''
      - rh_password is defined and rh_password != ''
    fail_msg: "Red Hat registry username (rh_username) and password (rh_password) must be provided"

- name: Ensure containers.podman collection is available
  ansible.builtin.command:
    cmd: ansible-galaxy collection install containers.podman
  register: galaxy_result
  changed_when: "'Installing' in galaxy_result.stdout"
  failed_when: false
  delegate_to: localhost
  run_once: true

- name: Log out from any existing sessions
  ansible.builtin.command:
    cmd: "podman logout {{ item }}"
  loop: "{{ container_registries }}"
  register: logout_result
  changed_when: false
  failed_when: false
  ignore_errors: true

# Fix the corrupted auth.json file
- name: Remove corrupted auth.json file if it exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/containers/auth.json"
    state: absent
  become: true

- name: Ensure containers config directory exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/containers"
    state: directory
    mode: '0700'
  become: true

- name: Create fresh auth.json file with proper structure
  ansible.builtin.copy:
    content: |
      {
        "auths": {}
      }
    dest: "{{ ansible_env.HOME }}/.config/containers/auth.json"
    mode: '0600'
  become: true

- name: Log in to container registries
  ansible.builtin.shell: |
    set +x
    echo "{{ rh_password }}" | podman login -u "{{ rh_username }}" --password-stdin "{{ item }}"
  loop: "{{ container_registries }}"
  register: login_result
  no_log: true
  changed_when: login_result.rc == 0
  failed_when: false  # Don't fail the playbook on login errors
  ignore_errors: true

- name: Verify registry login status
  containers.podman.podman_login_info:
    registry: "{{ item }}"
  loop: "{{ container_registries }}"
  register: verify_login
  failed_when: false
  ignore_errors: true

- name: Display login status
  ansible.builtin.debug:
    msg: "Login to {{ item.registry }} {{ 'succeeded' if item.logged_in else 'failed - continuing anyway' }}"
  loop: "{{ verify_login.results }}"
  loop_control:
    label: "{{ item.registry }}"

- name: Count successful logins
  ansible.builtin.set_fact:
    successful_logins: "{{ verify_login.results | selectattr('logged_in', 'eq', true) | list | length }}"
    required_registries:
      - "registry.redhat.io"  # The most critical registry for Red Hat images

- name: Warning if essential registries are not authenticated
  ansible.builtin.debug:
    msg: >-
      Warning: Failed to log in to registry.redhat.io.
      Image pulls may fail, but continuing the playbook.
      Please check your Red Hat credentials.
  when: >
    not (verify_login.results | selectattr('registry', 'eq', 'registry.redhat.io') | first).logged_in

- name: Proceed with warnings
  ansible.builtin.debug:
    msg: "Proceeding with {{ successful_logins }} out of {{ container_registries | length }} registries authenticated"
