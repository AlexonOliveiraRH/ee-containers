---
- name: Process environment {{ current_env }}
  ansible.builtin.block:
    - name: Verify environment variables
      ansible.builtin.assert:
        that:
          - current_env is defined
          - work_dir is defined
        fail_msg: "Required variables 'current_env' and 'work_dir' must be defined"
        success_msg: "Environment variables verified"
      tags: [always, validation]

    - name: Ensure build directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ work_dir }}/files"
        - "{{ work_dir }}/_build"
        - "{{ work_dir }}/context"
      tags: [setup, directories]

    - name: Set correct ownership for build directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        recurse: true
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
      loop:
        - "{{ work_dir }}/files"
        - "{{ work_dir }}/_build"
        - "{{ work_dir }}/context"
      become: true
      tags: [setup, directories, permissions]

    # Include all the build environment tasks
    - name: Include build environment tasks
      ansible.builtin.include_tasks: tasks/build_environment.yml
      tags: [build]

  ansible.builtin.rescue:
    - name: Display build error
      ansible.builtin.debug:
        msg: |
          Build failed for {{ current_env | default('unknown') }}:
          STDOUT:
          {{ build_output.stdout_lines | default([]) | to_nice_yaml }}
          STDERR:
          {{ build_output.stderr_lines | default([]) | to_nice_yaml }}
      tags: [error_handling, always]

    - name: Record build failure in status file
      ansible.builtin.copy:
        content: |
          Build failed at {{ ansible_date_time.iso8601 }}
          Environment: {{ current_env | default('unknown') }}
          Error details available in the playbook output
        dest: "{{ work_dir }}/build_failed.log"
        mode: '0644'
      tags: [error_handling, always]

  ansible.builtin.always:
    - name: Clean up build directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ work_dir }}/_build"
        - "{{ work_dir }}/context"
      failed_when: false
      tags: [cleanup, always]