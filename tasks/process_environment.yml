---
# This file is generated dynamically by site.yml
# Tasks for processing individual execution environments

- name: Get environment name
  ansible.builtin.set_fact:
    env_name: "{{ ee_environment | basename }}"  # Use ee_environment, not environment
    
- name: Update current build status for monitoring
  ansible.builtin.copy:
    dest: /tmp/current_env
    content: "Building: {{ env_name }}"
    mode: '0644'
  changed_when: true

- name: Extract base image information
  ansible.builtin.shell: |
    grep -A 3 "base_image:" "{{ ee_environment }}/execution-environment.yml" | grep "name:" | awk -F"'" '{print $2}' | tr -d "'"  # Changed from environment to ee_environment
  register: base_image_info
  changed_when: false

- name: Login to registry for this image
  ansible.builtin.shell: |
    REGISTRY=$(echo "{{ base_image_info.stdout }}" | cut -d'/' -f1)
    if [ ! -z "$REGISTRY" ]; then
      echo "Logging into registry: $REGISTRY"
      podman login $REGISTRY -u '{{ rh_username | default("") }}' -p '{{ rh_password | default("") }}' --tls-verify=false
    fi
  register: registry_login
  no_log: true
  failed_when: false
  when: base_image_info.stdout | length > 0

- name: Pull the base image directly
  ansible.builtin.shell: |
    podman pull --tls-verify=false "{{ base_image_info.stdout }}"
  register: image_pull
  changed_when: image_pull.rc == 0
  failed_when: false

- name: Create execution environment directory
  ansible.builtin.file:
    path: "/tmp/ee-containers/context/environments/{{ env_name }}"
    state: directory
    mode: '0755'

- name: Create scripts directory for execution environment
  ansible.builtin.file:
    path: "/tmp/ee-containers/context/environments/{{ env_name }}/scripts"
    state: directory
    mode: '0755'

- name: Ensure assemble script content
  ansible.builtin.template:
    src: "{{ playbook_dir }}/templates/assemble.sh.j2"
    dest: "/tmp/ee-containers/context/environments/{{ env_name }}/scripts/assemble"
    mode: '0755'

- name: Copy environment files to build context
  ansible.builtin.shell: |
    cp -r {{ ee_environment }}/* /tmp/ee-containers/context/environments/{{ env_name }}/  # Changed from environment to ee_environment
  changed_when: true

- name: Build execution environment image
  ansible.builtin.shell: |
    cd /tmp/ee-containers/context/environments/{{ env_name }} && \
    ansible-builder build \
      --tag {{ env_name }} \
      --container-runtime podman \
      --verbosity 2 \
      --prune-images \
      --context . \
      -f execution-environment.yml
  register: build_result
  failed_when: build_result.rc != 0
  changed_when: build_result.rc == 0

- name: Record build result
  ansible.builtin.set_fact:
    build_status: "{{ build_result.rc == 0 }}"
    build_output: "{{ build_result }}"
  changed_when: false

- name: Update status file with completion
  ansible.builtin.copy:
    dest: /tmp/current_env
    content: "COMPLETED: {{ env_name }}"
    mode: '0644'
  changed_when: true
  when: build_status
  
- name: Update status file with failure
  ansible.builtin.copy:
    dest: /tmp/current_env
    content: "FAILED: {{ env_name }}"
    mode: '0644'
  changed_when: true
  when: not build_status
